	.include "asm/macros.inc"
	.include "asm_1.inc"
	.include "global.inc"

	.text
	arm_func_start sub_02079094
sub_02079094: ; 0x02079094
	.word 0xE1010090
	bx lr
	arm_func_end sub_02079094

	arm_func_start sub_0207909C
sub_0207909C: ; 0x0207909C
	stmdb sp!, {r4, r5, r6, r7, lr}
	ldr r5, [r0], #4
	mov r2, r5, lsr #8
	mov r7, #0
	tst r5, #0xf
	movne r7, #1
_020790B4:
	cmp r2, #0
	ble _02079174
	ldrb lr, [r0], #1
	mov r4, #8
_020790C4:
	subs r4, r4, #1
	blt _020790B4
	tst lr, #0x80
	bne _020790E8
	ldrb r6, [r0], #1
	.word 0xE1416096
	add r1, r1, #1
	sub r2, r2, #1
	b _02079164
_020790E8:
	ldrb r5, [r0]
	cmp r7, #0
	moveq r6, #3
	beq _02079130
	tst r5, #0xe0
	movne r6, #1
	bne _02079130
	add r0, r0, #1
	and r6, r5, #0xf
	mov r6, r6, lsl #4
	tst r5, #0x10
	beq _02079128
	mov r6, r6, lsl #8
	ldrb r5, [r0], #1
	add r6, r6, r5, lsl #4
	add r6, r6, #0x100
_02079128:
	add r6, r6, #0x11
	ldrb r5, [r0]
_02079130:
	add r3, r6, r5, asr #4
	add r0, r0, #1
	and r5, r5, #0xf
	mov ip, r5, lsl #8
	ldrb r6, [r0], #1
	orr r5, r6, ip
	add ip, r5, #1
	sub r2, r2, r3
_02079150:
	ldrb r5, [r1, -ip]
	.word 0xE1415095
	add r1, r1, #1
	subs r3, r3, #1
	bgt _02079150
_02079164:
	cmp r2, #0
	movgt lr, lr, lsl #1
	bgt _020790C4
	b _020790B4
_02079174:
	ldmia sp!, {r4, r5, r6, r7, lr}
	bx lr
	arm_func_end sub_0207909C
_0207917C:
	.byte 0xF8, 0xB5, 0x0E, 0x1C
	.byte 0x00, 0x21, 0xC9, 0x43, 0x05, 0x1C, 0x17, 0x1C, 0x1C, 0x1C, 0xFF, 0xF7, 0xDB, 0xF8, 0x01, 0x23
	.byte 0x28, 0x1C, 0x31, 0x1C, 0x22, 0x1C, 0x1B, 0x06, 0xFF, 0xF7, 0x22, 0xF9, 0x00, 0x2C, 0x11, 0xD0
	.byte 0x68, 0x00, 0x28, 0x18, 0x80, 0x1C, 0x01, 0x21, 0x07, 0x4A, 0x80, 0x00, 0xC9, 0x07, 0x83, 0x58
	.byte 0x0B, 0x42, 0xFC, 0xD1, 0x00, 0x20, 0x00, 0x90, 0x04, 0x4B, 0x28, 0x1C, 0x31, 0x1C, 0x3A, 0x1C
	.byte 0x7F, 0xF7, 0x16, 0xFD, 0xF8, 0xBD, 0xC0, 0x46, 0xB0, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0xAF


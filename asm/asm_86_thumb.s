	.include "asm/macros.inc"
	.include "asm_1.inc"
	.include "global.inc"

	.text
	thumb_func_start sub_0207B894
sub_0207B894: ; 0x0207B894
	push {r3, r4, r5, lr}
	ldr r0, _0207B8D0 ; =0x02FFFD9C
	ldr r1, [r0]
	mov r0, #0x26
	lsl r0, r0, #0x14
	cmp r1, r0
	blo _0207B8AA
	mov r0, #0xa
	lsl r0, r0, #0x16
	cmp r1, r0
	blo _0207B8AC
_0207B8AA:
	mov r1, #0
_0207B8AC:
	ldr r0, _0207B8D4 ; =0x0214C4D0
	cmp r1, #0
	str r1, [r0]
	bne _0207B8C8
	ldr r5, _0207B8D8 ; =0x0207B8E0
	ldr r4, _0207B8D0 ; =0x02FFFD9C
	str r5, [r4]
	bl sub_0207AC8C
	cmp r0, #0
	bne _0207B8C8
	ldr r0, _0207B8DC ; =0xFF7FFFFF
	and r0, r4
	str r5, [r0]
_0207B8C8:
	ldr r0, _0207B8D4 ; =0x0214C4D0
	mov r1, #0
	str r1, [r0, #8]
	pop {r3, r4, r5, pc}
	.align 2, 0
_0207B8D0: .word 0x02FFFD9C
_0207B8D4: .word 0x0214C4D0
_0207B8D8: .word 0x0207B8E0
_0207B8DC: .word 0xFF7FFFFF
	thumb_func_end sub_0207B894
_0207B8E0:
	.byte 0x64, 0xC0, 0x9F, 0xE5, 0x00, 0xC0, 0x9C, 0xE5, 0x00, 0x00, 0x5C, 0xE3, 0x0F, 0xE0, 0xA0, 0x11
	.byte 0x1C, 0xFF, 0x2F, 0x11, 0x54, 0xC0, 0x9F, 0xE5, 0x0F, 0x60, 0x2C, 0xE9, 0x01, 0x00, 0x0D, 0xE2
	.byte 0x0C, 0xD0, 0xA0, 0xE1, 0x00, 0x10, 0x0F, 0xE1, 0x1F, 0x10, 0x01, 0xE2, 0x17, 0x00, 0x31, 0xE3
	.byte 0x01, 0x00, 0x00, 0x1A, 0x0E, 0x00, 0x00, 0xEB, 0x02, 0x00, 0x00, 0xEA, 0x1B, 0x00, 0x31, 0xE3
	.byte 0x00, 0x00, 0x00, 0x1A, 0x0A, 0x00, 0x00, 0xEB, 0x1C, 0xC0, 0x9F, 0xE5, 0x00, 0xC0, 0x9C, 0xE5
	.byte 0x00, 0x00, 0x5C, 0xE3, 0xFE, 0xFF, 0xFF, 0x0A, 0x00, 0x00, 0xA0, 0xE1, 0xFD, 0xFF, 0xFF, 0xEA
	.byte 0x0F, 0x50, 0xBD, 0xE8, 0x0C, 0xD0, 0xA0, 0xE1, 0x1E, 0xFF, 0x2F, 0xE1, 0xD0, 0xC4, 0x14, 0x02
	.byte 0x00, 0x00, 0x00, 0x02, 0x01, 0x40, 0x2D, 0xE9, 0x02, 0x00, 0x00, 0xEB, 0x21, 0x00, 0x00, 0xEB
	.byte 0x01, 0x40, 0xBD, 0xE8, 0x1E, 0xFF, 0x2F, 0xE1, 0x74, 0x10, 0x9F, 0xE5, 0x6C, 0x00, 0x81, 0xE5
	.byte 0x00, 0x00, 0x9C, 0xE5, 0x04, 0x00, 0x81, 0xE5, 0x04, 0x00, 0x9C, 0xE5, 0x08, 0x00, 0x81, 0xE5
	.byte 0x08, 0x00, 0x9C, 0xE5, 0x0C, 0x00, 0x81, 0xE5, 0x0C, 0x00, 0x9C, 0xE5, 0x10, 0x00, 0x81, 0xE5
	.byte 0x10, 0x20, 0x9C, 0xE5, 0x01, 0x20, 0xC2, 0xE3, 0x14, 0x00, 0x81, 0xE2, 0xF0, 0x0F, 0x80, 0xE8
	.byte 0x00, 0x00, 0x92, 0xE5, 0x64, 0x00, 0x81, 0xE5, 0x04, 0x30, 0x92, 0xE5, 0x00, 0x30, 0x81, 0xE5
	.byte 0x08, 0x00, 0x92, 0xE5, 0x34, 0x00, 0x81, 0xE5, 0x0C, 0x00, 0x92, 0xE5, 0x40, 0x00, 0x81, 0xE5
	.byte 0x00, 0x00, 0x0F, 0xE1, 0x80, 0x30, 0x83, 0xE3, 0x20, 0x30, 0xC3, 0xE3, 0x03, 0xF0, 0x2F, 0xE1
	.byte 0x38, 0xD0, 0x81, 0xE5, 0x3C, 0xE0, 0x81, 0xE5, 0x00, 0x20, 0x4F, 0xE1, 0x00, 0xF0, 0x2F, 0xE1
	.byte 0x1E, 0xFF, 0x2F, 0xE1, 0xFC, 0xC4, 0x14, 0x02, 0x08, 0x40, 0x2D, 0xE9, 0x58, 0x00, 0x9F, 0xE5
	.byte 0x08, 0x00, 0x90, 0xE5, 0x00, 0x00, 0x50, 0xE3, 0x08, 0x80, 0xBD, 0x08, 0x00, 0x20, 0x0F, 0xE1
	.byte 0x0D, 0x00, 0xA0, 0xE1, 0x44, 0x10, 0x9F, 0xE5, 0x01, 0xF0, 0x2F, 0xE1, 0x0D, 0x10, 0xA0, 0xE1
	.byte 0x00, 0xD0, 0xA0, 0xE1, 0x06, 0x00, 0x2D, 0xE9, 0x64, 0xFF, 0xFF, 0xEB, 0x30, 0x00, 0x9F, 0xE5
	.byte 0x30, 0x10, 0x9F, 0xE5, 0x00, 0x10, 0x91, 0xE5, 0x2C, 0xC0, 0x9F, 0xE5, 0x00, 0xC0, 0x9C, 0xE5
	.byte 0x28, 0xE0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x60, 0xFF, 0xFF, 0xEB, 0x06, 0x00, 0xBD, 0xE8
	.byte 0x01, 0xD0, 0xA0, 0xE1, 0x02, 0xF0, 0x2F, 0xE1, 0x08, 0x80, 0xBD, 0xE8, 0xD0, 0xC4, 0x14, 0x02
	.byte 0x9F, 0x00, 0x00, 0x00, 0xFC, 0xC4, 0x14, 0x02, 0xD4, 0xC4, 0x14, 0x02, 0xD8, 0xC4, 0x14, 0x02
	.byte 0x38, 0xBA, 0x07, 0x02

	thumb_func_start sub_0207BA64
sub_0207BA64: ; 0x0207BA64
	ldr r1, _0207BA78 ; =0x0214C56C
	mov r2, #1
	lsl r2, r0
	lsl r0, r2, #0x10
	ldrh r3, [r1]
	lsr r0, r0, #0x10
	orr r0, r3
	strh r0, [r1]
	bx lr
	nop
_0207BA78: .word 0x0214C56C
	thumb_func_end sub_0207BA64

	thumb_func_start sub_0207BA7C
sub_0207BA7C: ; 0x0207BA7C
	push {r3, r4, r5, lr}
	ldr r5, _0207BAB4 ; =0x0214C570
	ldrh r0, [r5]
	cmp r0, #0
	bne _0207BAB2
	mov r0, #1
	strh r0, [r5]
	mov r4, #0
	mov r0, #0
	bl sub_0207BA64
	str r4, [r5, #8]
	ldr r1, _0207BAB8 ; =0x04000102
	str r4, [r5, #0xc]
	strh r4, [r1]
	sub r0, r1, #2
	strh r4, [r0]
	mov r0, #0xc1
	strh r0, [r1]
	ldr r1, _0207BABC ; =0x0207BACD
	mov r0, #8
	bl sub_02079D20
	mov r0, #8
	bl sub_02079E70
	str r4, [r5, #4]
_0207BAB2:
	pop {r3, r4, r5, pc}
	.align 2, 0
_0207BAB4: .word 0x0214C570
_0207BAB8: .word 0x04000102
_0207BABC: .word 0x0207BACD
	thumb_func_end sub_0207BA7C

	thumb_func_start sub_0207BAC0
sub_0207BAC0: ; 0x0207BAC0
	ldr r0, _0207BAC8 ; =0x0214C570
	ldrh r0, [r0]
	bx lr
	nop
_0207BAC8: .word 0x0214C570
	thumb_func_end sub_0207BAC0
_0207BACC:
	.byte 0x0B, 0x48, 0x00, 0x23
	.byte 0x82, 0x68, 0xC1, 0x68, 0x52, 0x1C, 0x59, 0x41, 0x82, 0x60, 0xC1, 0x60, 0x41, 0x68, 0x00, 0x29
	.byte 0x06, 0xD0, 0x07, 0x4A, 0x13, 0x80, 0x91, 0x1E, 0x0B, 0x80, 0xC1, 0x21, 0x11, 0x80, 0x43, 0x60
	.byte 0x04, 0x49, 0x05, 0x4B, 0x00, 0x20, 0x00, 0x22, 0x18, 0x47, 0xC0, 0x46, 0x70, 0xC5, 0x14, 0x02
	.byte 0x02, 0x01, 0x00, 0x04, 0xCD, 0xBA, 0x07, 0x02, 0x21, 0x9E, 0x07, 0x02

	thumb_func_start sub_0207BB0C
sub_0207BB0C: ; 0x0207BB0C
	push {r4, r5, lr}
	sub sp, #0xc
	blx sub_0207C0E4
	ldr r1, _0207BB74 ; =0x04000100
	add r3, sp, #0
	ldrh r1, [r1]
	ldr r2, _0207BB78 ; =0x0000FFFF
	strh r1, [r3]
	ldr r1, _0207BB7C ; =0x0214C570
	ldr r4, [r1, #8]
	ldr r5, [r1, #0xc]
	mov r1, #0
	and r5, r2
	mvn r1, r1
	add r2, r4, #0
	and r2, r1
	str r2, [sp, #4]
	ldr r1, _0207BB80 ; =0x04000214
	str r5, [sp, #8]
	ldr r2, [r1]
	mov r1, #8
	tst r2, r1
	beq _0207BB52
	ldrh r2, [r3]
	lsl r1, r1, #0xc
	tst r1, r2
	bne _0207BB52
	ldr r2, [sp, #4]
	mov r1, #0
	ldr r3, [sp, #8]
	add r2, r2, #1
	adc r3, r1
	str r2, [sp, #4]
	str r3, [sp, #8]
_0207BB52:
	blx sub_0207C0F8
	ldr r2, [sp, #4]
	ldr r3, [sp, #8]
	lsr r0, r2, #0x10
	lsl r1, r3, #0x10
	orr r1, r0
	add r0, sp, #0
	lsl r3, r2, #0x10
	ldrh r2, [r0]
	asr r0, r2, #0x1f
	orr r1, r0
	add r0, r3, #0
	orr r0, r2
	add sp, #0xc
	pop {r4, r5, pc}
	nop
_0207BB74: .word 0x04000100
_0207BB78: .word 0x0000FFFF
_0207BB7C: .word 0x0214C570
_0207BB80: .word 0x04000214
	thumb_func_end sub_0207BB0C

	thumb_func_start sub_0207BB84
sub_0207BB84: ; 0x0207BB84
	ldr r0, _0207BB8C ; =0x04000100
	ldrh r0, [r0]
	bx lr
	nop
_0207BB8C: .word 0x04000100
	thumb_func_end sub_0207BB84

	thumb_func_start sub_0207BB90
sub_0207BB90: ; 0x0207BB90
	push {r4, r5, r6, lr}
	add r4, r0, #0
	bl sub_0207BB0C
	ldr r2, _0207BBE4 ; =0x04000106
	mov r6, #0
	strh r6, [r2]
	ldr r2, [r4, #0xc]
	ldr r4, [r4, #0x10]
	sub r5, r2, r0
	sbc r4, r1
	ldr r1, _0207BBE8 ; =0x0207BD90
	mov r0, #1
	mov r2, #0
	bl sub_02079E20
	mov r1, #0
	mov r0, #0
	sub r1, r5, r1
	mov ip, r4
	mov r1, ip
	sbc r1, r0
	bge _0207BBC2
	ldr r6, _0207BBEC ; =0x0000FFFE
	b _0207BBD4
_0207BBC2:
	mov r0, #1
	mov r1, #0
	lsl r0, r0, #0x10
	sub r0, r5, r0
	sbc r4, r1
	bge _0207BBD4
	mvn r0, r5
	lsl r0, r0, #0x10
	lsr r6, r0, #0x10
_0207BBD4:
	ldr r1, _0207BBF0 ; =0x04000104
	mov r0, #0xc1
	strh r6, [r1]
	strh r0, [r1, #2]
	mov r0, #0x10
	bl sub_02079E70
	pop {r4, r5, r6, pc}
	.align 2, 0
_0207BBE4: .word 0x04000106
_0207BBE8: .word 0x0207BD90
_0207BBEC: .word 0x0000FFFE
_0207BBF0: .word 0x04000104
	thumb_func_end sub_0207BB90

	thumb_func_start sub_0207BBF4
sub_0207BBF4: ; 0x0207BBF4
	push {r4, lr}
	ldr r4, _0207BC14 ; =0x0214C580
	ldrh r0, [r4]
	cmp r0, #0
	bne _0207BC12
	mov r0, #1
	strh r0, [r4]
	bl sub_0207BA64
	mov r0, #0
	str r0, [r4, #4]
	str r0, [r4, #8]
	mov r0, #0x10
	bl sub_02079E94
_0207BC12:
	pop {r4, pc}
	.align 2, 0
_0207BC14: .word 0x0214C580
	thumb_func_end sub_0207BBF4

	thumb_func_start sub_0207BC18
sub_0207BC18: ; 0x0207BC18
	ldr r0, _0207BC20 ; =0x0214C580
	ldrh r0, [r0]
	bx lr
	nop
_0207BC20: .word 0x0214C580
	thumb_func_end sub_0207BC18

	thumb_func_start sub_0207BC24
sub_0207BC24: ; 0x0207BC24
	mov r1, #0
	str r1, [r0]
	str r1, [r0, #8]
	bx lr
	thumb_func_end sub_0207BC24

	thumb_func_start sub_0207BC2C
sub_0207BC2C: ; 0x0207BC2C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r4, r0, #0
	add r7, r2, #0
	add r6, r1, #0
	ldr r2, [r4, #0x1c]
	mov r1, #0
	ldr r3, [r4, #0x20]
	mov r0, #0
	eor r0, r3
	eor r1, r2
	orr r0, r1
	beq _0207BC82
	bl sub_0207BB0C
	ldr r6, [r4, #0x24]
	ldr r7, [r4, #0x28]
	sub r2, r6, r0
	mov ip, r7
	mov r2, ip
	sbc r2, r1
	bhs _0207BC82
	ldr r2, [r4, #0x1c]
	sub r0, r0, r6
	str r2, [sp]
	ldr r2, [r4, #0x20]
	sbc r1, r7
	str r2, [sp, #4]
	ldr r2, [sp]
	ldr r3, [sp, #4]
	blx sub_0208D5C4
	add r2, r0, #0
	add r3, r1, #0
	mov r5, #0
	add r2, r2, #1
	ldr r0, [sp]
	ldr r1, [sp, #4]
	adc r3, r5
	blx sub_0208D60C
	add r6, r6, r0
	adc r7, r1
_0207BC82:
	ldr r0, _0207BCF0 ; =0x0214C580
	str r6, [r4, #0xc]
	str r7, [r4, #0x10]
	ldr r5, [r0, #4]
	cmp r5, #0
	beq _0207BCCC
_0207BC8E:
	ldr r2, [r5, #0xc]
	ldr r0, [r5, #0x10]
	sub r3, r6, r2
	mov ip, r7
	mov r2, ip
	sbc r2, r0
	mov r1, #0
	mov r0, #0
	sub r0, r3, r0
	sbc r2, r1
	bge _0207BCC6
	ldr r0, [r5, #0x14]
	str r0, [r4, #0x14]
	str r4, [r5, #0x14]
	ldr r0, [r4, #0x14]
	str r5, [r4, #0x18]
	cmp r0, #0
	beq _0207BCB8
	add sp, #8
	str r4, [r0, #0x18]
	pop {r3, r4, r5, r6, r7, pc}
_0207BCB8:
	ldr r0, _0207BCF0 ; =0x0214C580
	str r4, [r0, #4]
	add r0, r4, #0
	bl sub_0207BB90
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0207BCC6:
	ldr r5, [r5, #0x18]
	cmp r5, #0
	bne _0207BC8E
_0207BCCC:
	mov r0, #0
	str r0, [r4, #0x18]
	ldr r0, _0207BCF0 ; =0x0214C580
	ldr r1, [r0, #8]
	str r4, [r0, #8]
	str r1, [r4, #0x14]
	cmp r1, #0
	beq _0207BCE2
	add sp, #8
	str r4, [r1, #0x18]
	pop {r3, r4, r5, r6, r7, pc}
_0207BCE2:
	str r4, [r0, #8]
	str r4, [r0, #4]
	add r0, r4, #0
	bl sub_0207BB90
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0207BCF0: .word 0x0214C580
	thumb_func_end sub_0207BC2C

	thumb_func_start sub_0207BCF4
sub_0207BCF4: ; 0x0207BCF4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r6, r2, #0
	add r7, r3, #0
	cmp r5, #0
	beq _0207BD08
	ldr r0, [r5]
	cmp r0, #0
	beq _0207BD0C
_0207BD08:
	bl sub_0207C774
_0207BD0C:
	blx sub_0207C0E4
	str r0, [sp]
	mov r0, #0
	str r0, [r5, #0x1c]
	str r0, [r5, #0x20]
	ldr r0, [sp, #0x18]
	str r7, [r5]
	str r0, [r5, #4]
	bl sub_0207BB0C
	add r2, r0, #0
	add r3, r1, #0
	add r0, r5, #0
	add r1, r4, r2
	adc r6, r3
	add r2, r6, #0
	bl sub_0207BC2C
	ldr r0, [sp]
	blx sub_0207C0F8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0207BCF4

	thumb_func_start sub_0207BD3C
sub_0207BD3C: ; 0x0207BD3C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	blx sub_0207C0E4
	ldr r1, [r5]
	add r4, r0, #0
	cmp r1, #0
	bne _0207BD52
	blx sub_0207C0F8
	pop {r3, r4, r5, pc}
_0207BD52:
	ldr r0, [r5, #0x18]
	cmp r0, #0
	bne _0207BD60
	ldr r2, [r5, #0x14]
	ldr r1, _0207BD8C ; =0x0214C580
	str r2, [r1, #8]
	b _0207BD64
_0207BD60:
	ldr r1, [r5, #0x14]
	str r1, [r0, #0x14]
_0207BD64:
	ldr r1, [r5, #0x14]
	cmp r1, #0
	beq _0207BD6E
	str r0, [r1, #0x18]
	b _0207BD7A
_0207BD6E:
	ldr r1, _0207BD8C ; =0x0214C580
	cmp r0, #0
	str r0, [r1, #4]
	beq _0207BD7A
	bl sub_0207BB90
_0207BD7A:
	mov r0, #0
	str r0, [r5]
	str r0, [r5, #0x1c]
	str r0, [r5, #0x20]
	add r0, r4, #0
	blx sub_0207C0F8
	pop {r3, r4, r5, pc}
	nop
_0207BD8C: .word 0x0214C580
	thumb_func_end sub_0207BD3C
_0207BD90:
	.byte 0x01, 0x40, 0x2D, 0xE9, 0x01, 0x00, 0x00, 0xFA, 0x01, 0x40, 0xBD, 0xE8, 0x1E, 0xFF, 0x2F, 0xE1
	.byte 0x70, 0xB5, 0x23, 0x48, 0x00, 0x24, 0x04, 0x80, 0x10, 0x20, 0x10, 0x25, 0xFE, 0xF7, 0x72, 0xF8
	.byte 0x20, 0x4A, 0x21, 0x48, 0x11, 0x58, 0x29, 0x43, 0x11, 0x50, 0xFF, 0xF7, 0xA7, 0xFE, 0x1F, 0x4A
	.byte 0x55, 0x68, 0x00, 0x2D, 0x32, 0xD0, 0xEB, 0x68, 0x2E, 0x69, 0xC0, 0x1A, 0xB1, 0x41, 0x03, 0xD2
	.byte 0x28, 0x1C, 0xFF, 0xF7, 0xDD, 0xFE, 0x70, 0xBD, 0xA8, 0x69, 0x50, 0x60, 0x00, 0x28, 0x01, 0xD1
	.byte 0x94, 0x60, 0x00, 0xE0, 0x44, 0x61, 0xEA, 0x69, 0x00, 0x20, 0x2B, 0x6A, 0x00, 0x21, 0x59, 0x40
	.byte 0x50, 0x40, 0x2C, 0x68, 0x08, 0x43, 0x01, 0xD1, 0x00, 0x20, 0x28, 0x60, 0x00, 0x2C, 0x01, 0xD0
	.byte 0x68, 0x68, 0xA0, 0x47, 0xEA, 0x69, 0x00, 0x20, 0x2B, 0x6A, 0x00, 0x21, 0x59, 0x40, 0x50, 0x40
	.byte 0x08, 0x43, 0x05, 0xD0, 0x28, 0x1C, 0x00, 0x21, 0x00, 0x22, 0x2C, 0x60, 0xFF, 0xF7, 0x06, 0xFF
	.byte 0x06, 0x48, 0x40, 0x68, 0x00, 0x28, 0x01, 0xD0, 0xFF, 0xF7, 0xB2, 0xFE, 0x70, 0xBD, 0xC0, 0x46
	.byte 0x06, 0x01, 0x00, 0x04, 0x00, 0x00, 0xFE, 0x02, 0xF8, 0x3F, 0x00, 0x00, 0x80, 0xC5, 0x14, 0x02

	thumb_func_start sub_0207BE40
sub_0207BE40: ; 0x0207BE40
	push {r3, r4, r5, lr}
	ldr r4, _0207BE60 ; =0x0214C58C
	ldrh r0, [r4]
	cmp r0, #0
	bne _0207BE5E
	mov r0, #1
	strh r0, [r4]
	mov r5, #0
	str r5, [r4, #0xc]
	mov r0, #4
	str r5, [r4, #0x10]
	bl sub_02079E94
	str r5, [r4, #8]
	str r5, [r4, #4]
_0207BE5E:
	pop {r3, r4, r5, pc}
	.align 2, 0
_0207BE60: .word 0x0214C58C
	thumb_func_end sub_0207BE40

	thumb_func_start sub_0207BE64
sub_0207BE64: ; 0x0207BE64
	push {r4, r5, r6, lr}
	ldr r1, _0207BEAC ; =0x0214C58C
	ldr r1, [r1, #0xc]
	cmp r1, #0
	beq _0207BEA6
	ldr r2, [r0, #0xc]
	mov r3, #0x10
	mov r4, #0x10
_0207BE74:
	ldr r5, [r1, #0xc]
	cmp r5, r2
	blo _0207BEA0
	cmp r5, r2
	bne _0207BE86
	ldrsh r6, [r1, r3]
	ldrsh r5, [r0, r4]
	cmp r6, r5
	ble _0207BEA0
_0207BE86:
	ldr r2, [r1, #0x14]
	str r2, [r0, #0x14]
	str r1, [r0, #0x18]
	str r0, [r1, #0x14]
	cmp r2, #0
	beq _0207BE96
	str r0, [r2, #0x18]
	pop {r4, r5, r6, pc}
_0207BE96:
	ldr r1, _0207BEAC ; =0x0214C58C
	str r0, [r1, #0xc]
	bl sub_0207BF64
	pop {r4, r5, r6, pc}
_0207BEA0:
	ldr r1, [r1, #0x18]
	cmp r1, #0
	bne _0207BE74
_0207BEA6:
	bl sub_0207BEB0
	pop {r4, r5, r6, pc}
	.align 2, 0
_0207BEAC: .word 0x0214C58C
	thumb_func_end sub_0207BE64

	thumb_func_start sub_0207BEB0
sub_0207BEB0: ; 0x0207BEB0
	push {r3, lr}
	ldr r1, _0207BED0 ; =0x0214C58C
	mov r2, #0
	ldr r3, [r1, #0x10]
	str r3, [r0, #0x14]
	str r2, [r0, #0x18]
	str r0, [r1, #0x10]
	cmp r3, #0
	beq _0207BEC6
	str r0, [r3, #0x18]
	pop {r3, pc}
_0207BEC6:
	str r0, [r1, #0xc]
	bl sub_0207BF64
	pop {r3, pc}
	nop
_0207BED0: .word 0x0214C58C
	thumb_func_end sub_0207BEB0
_0207BED4:
	.byte 0x00, 0x28, 0x0D, 0xD0, 0x82, 0x69, 0x41, 0x69, 0x00, 0x2A, 0x01, 0xD0
	.byte 0x51, 0x61, 0x01, 0xE0, 0x04, 0x48, 0x01, 0x61, 0x00, 0x29, 0x01, 0xD0, 0x8A, 0x61, 0x70, 0x47
	.byte 0x01, 0x48, 0xC2, 0x60, 0x70, 0x47, 0xC0, 0x46, 0x8C, 0xC5, 0x14, 0x02

	thumb_func_start sub_0207BEFC
sub_0207BEFC: ; 0x0207BEFC
	mov r1, #0
	str r1, [r0]
	str r1, [r0, #8]
	str r1, [r0, #0x20]
	bx lr
	.align 2, 0
	thumb_func_end sub_0207BEFC

	thumb_func_start sub_0207BF08
sub_0207BF08: ; 0x0207BF08
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	add r4, r1, #0
	add r6, r2, #0
	add r7, r3, #0
	blx sub_0207C0E4
	str r0, [sp]
	cmp r5, #0
	beq _0207BF24
	ldr r0, [r5]
	cmp r0, #0
	beq _0207BF28
_0207BF24:
	bl sub_0207C774
_0207BF28:
	ldr r0, _0207BF60 ; =0x04000006
	ldrh r0, [r0]
	str r0, [sp, #4]
	bl sub_0207C0A8
	mov r1, #0
	str r1, [r5, #0x1c]
	ldr r1, [sp, #4]
	strh r4, [r5, #0x10]
	cmp r4, r1
	bgt _0207BF40
	add r0, r0, #1
_0207BF40:
	str r0, [r5, #0xc]
	ldr r0, [sp, #0x20]
	strh r6, [r5, #0x12]
	str r0, [r5, #4]
	mov r0, #0
	str r0, [r5, #0x24]
	add r0, r5, #0
	str r7, [r5]
	bl sub_0207BE64
	ldr r0, [sp]
	blx sub_0207C0F8
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0207BF60: .word 0x04000006
	thumb_func_end sub_0207BF08

	thumb_func_start sub_0207BF64
sub_0207BF64: ; 0x0207BF64
	push {r4, lr}
	ldr r1, _0207BF8C ; =0x0207BF95
	add r4, r0, #0
	mov r0, #4
	bl sub_02079D20
	mov r0, #0x10
	ldrsh r0, [r4, r0]
	bl GX_SetVCountEqVal
	ldr r2, _0207BF90 ; =0x04000004
	mov r0, #0x20
	ldrh r1, [r2]
	orr r0, r1
	strh r0, [r2]
	mov r0, #4
	bl sub_02079E70
	pop {r4, pc}
	nop
_0207BF8C: .word 0x0207BF95
_0207BF90: .word 0x04000004
	thumb_func_end sub_0207BF64
_0207BF94:
	.byte 0xF8, 0xB5, 0x04, 0x20, 0x04, 0x24, 0xFD, 0xF7, 0x7B, 0xFF, 0x30, 0x4E
	.byte 0x30, 0x48, 0x31, 0x88, 0x30, 0x4A, 0x08, 0x40, 0x30, 0x80, 0x30, 0x48, 0x11, 0x58, 0x21, 0x43
	.byte 0x11, 0x50, 0x31, 0x88, 0x08, 0x12, 0x00, 0x06, 0x02, 0x0E, 0x49, 0x00, 0xB0, 0x01, 0x08, 0x40
	.byte 0x10, 0x43, 0x40, 0x1E, 0x00, 0xF0, 0x70, 0xF8, 0x29, 0x48, 0xC4, 0x68, 0x00, 0x2C, 0x45, 0xD0
	.byte 0x75, 0x88, 0x28, 0x1C, 0x00, 0xF0, 0x68, 0xF8, 0x07, 0x1C, 0x20, 0x1C, 0x39, 0x1C, 0x2A, 0x1C
	.byte 0x00, 0xF0, 0x48, 0xF8, 0x00, 0x28, 0x04, 0xD0, 0x01, 0x28, 0x17, 0xD0, 0x02, 0x28, 0x27, 0xD0
	.byte 0x30, 0xE0, 0x20, 0x1C, 0xFF, 0xF7, 0xB6, 0xFF, 0x10, 0x20, 0x71, 0x88, 0x20, 0x5E, 0x88, 0x42
	.byte 0x2C, 0xD1, 0xE0, 0x68, 0xB8, 0x42, 0x29, 0xD1, 0x04, 0x20, 0xFD, 0xF7, 0x43, 0xFF, 0x31, 0x88
	.byte 0x14, 0x48, 0x08, 0x40, 0x30, 0x80, 0x04, 0x20, 0xFD, 0xF7, 0x4E, 0xFF, 0x25, 0x68, 0x20, 0x1C
	.byte 0xFF, 0xF7, 0x58, 0xFF, 0x00, 0x20, 0x20, 0x60, 0x00, 0x2D, 0x01, 0xD0, 0x60, 0x68, 0xA8, 0x47
	.byte 0xE0, 0x69, 0x00, 0x28, 0x0E, 0xD0, 0x60, 0x6A, 0x00, 0x28, 0x0B, 0xD1, 0x25, 0x60, 0x02, 0xE0
	.byte 0x20, 0x1C, 0xFF, 0xF7, 0x47, 0xFF, 0x0A, 0x48, 0x80, 0x68, 0x40, 0x1C, 0xE0, 0x60, 0x20, 0x1C
	.byte 0xFF, 0xF7, 0x08, 0xFF, 0x06, 0x48, 0xC4, 0x68, 0x00, 0x2C, 0xB9, 0xD1, 0xF8, 0xBD, 0xC0, 0x46
	.byte 0x04, 0x00, 0x00, 0x04, 0xDF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x02, 0xF8, 0x3F, 0x00, 0x00
	.byte 0x8C, 0xC5, 0x14, 0x02, 0xC3, 0x68, 0xCB, 0x1A, 0x10, 0x21, 0x41, 0x5E, 0x52, 0x1A, 0x00, 0x2B
	.byte 0x02, 0xDB, 0x03, 0xD1, 0x00, 0x2A, 0x01, 0xDA, 0x00, 0x20, 0x70, 0x47, 0x00, 0x2A, 0x01, 0xDA
	.byte 0x04, 0x49, 0x52, 0x18, 0x12, 0x21, 0x40, 0x5E, 0x82, 0x42, 0x01, 0xDC, 0x01, 0x20, 0x70, 0x47
	.byte 0x02, 0x20, 0x70, 0x47, 0x07, 0x01, 0x00, 0x00

	thumb_func_start sub_0207C0A8
sub_0207C0A8: ; 0x0207C0A8
	push {r3, r4, r5, lr}
	add r4, r0, #0
	blx sub_0207C0E4
	ldr r1, _0207C0CC ; =0x0214C58C
	ldr r2, [r1, #4]
	cmp r4, r2
	bge _0207C0BE
	ldr r2, [r1, #8]
	add r2, r2, #1
	str r2, [r1, #8]
_0207C0BE:
	ldr r5, _0207C0CC ; =0x0214C58C
	str r4, [r5, #4]
	blx sub_0207C0F8
	ldr r0, [r5, #8]
	pop {r3, r4, r5, pc}
	nop
_0207C0CC: .word 0x0214C58C
	thumb_func_end sub_0207C0A8


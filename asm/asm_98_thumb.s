	.include "asm/macros.inc"
	.include "asm_1.inc"
	.include "global.inc"

	.text
	thumb_func_start sub_0207C94C
sub_0207C94C: ; 0x0207C94C
	ldr r3, _0207C950 ; =sub_0207C954
	bx r3
	.align 2, 0
_0207C950: .word sub_0207C954
	thumb_func_end sub_0207C94C

	thumb_func_start sub_0207C954
sub_0207C954: ; 0x0207C954
	push {r3, r4, r5, r6, r7, lr}
	blx OS_DisableInterrupts
	str r0, [sp]
	ldr r0, _0207C9E4 ; =0x0214C5E4
	ldrh r1, [r0]
	cmp r1, #0
	bne _0207C9DA
	mov r1, #1
	strh r1, [r0]
	mov r0, #0xe2
	mov r2, #0
	ldr r1, _0207C9E8 ; =0x02FFFC00
	lsl r0, r0, #2
	str r2, [r1, r0]
	ldr r0, _0207C9EC ; =0x0214C5E8
	add r4, r2, #0
_0207C976:
	lsl r1, r2, #2
	add r2, r2, #1
	str r4, [r0, r1]
	cmp r2, #0x20
	blt _0207C976
	mov r6, #1
	ldr r0, _0207C9F0 ; =0x0000C408
	ldr r5, _0207C9F4 ; =0x04000184
	lsl r6, r6, #0x12
	strh r0, [r5]
	add r0, r6, #0
	bl sub_02079EB8
	ldr r1, _0207C9F8 ; =sub_0207CAD4
	add r0, r6, #0
	bl sub_02079D20
	add r0, r6, #0
	bl sub_02079E70
	sub r0, r5, #4
	mov r3, #0xf
	mov r7, #0xf
	mov r5, #0xf
_0207C9A6:
	ldrh r1, [r0]
	add r2, r1, #0
	and r2, r5
	lsl r1, r2, #8
	strh r1, [r0]
	cmp r2, #0
	bne _0207C9B8
	cmp r4, #4
	bgt _0207C9DA
_0207C9B8:
	ldrh r6, [r0]
	mov r1, #0xfa
	lsl r1, r1, #2
	and r6, r7
	cmp r6, r2
	bne _0207C9D6
_0207C9C4:
	cmp r1, #0
	bgt _0207C9CC
	mov r4, #0
	b _0207C9D6
_0207C9CC:
	ldrh r6, [r0]
	sub r1, r1, #1
	and r6, r3
	cmp r6, r2
	beq _0207C9C4
_0207C9D6:
	add r4, r4, #1
	b _0207C9A6
_0207C9DA:
	ldr r0, [sp]
	blx OS_RestoreInterrupts
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0207C9E4: .word 0x0214C5E4
_0207C9E8: .word 0x02FFFC00
_0207C9EC: .word 0x0214C5E8
_0207C9F0: .word 0x0000C408
_0207C9F4: .word 0x04000184
_0207C9F8: .word sub_0207CAD4
	thumb_func_end sub_0207C954

	thumb_func_start sub_0207C9FC
sub_0207C9FC: ; 0x0207C9FC
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	blx OS_DisableInterrupts
	add r2, r0, #0
	lsl r1, r5, #2
	ldr r0, _0207CA40 ; =0x0214C5E8
	cmp r4, #0
	str r4, [r0, r1]
	beq _0207CA24
	mov r1, #0xe2
	mov r3, #1
	ldr r0, _0207CA44 ; =0x02FFFC00
	lsl r1, r1, #2
	ldr r4, [r0, r1]
	lsl r3, r5
	orr r3, r4
	str r3, [r0, r1]
	b _0207CA36
_0207CA24:
	mov r3, #0xe2
	mov r4, #1
	lsl r4, r5
	ldr r1, _0207CA44 ; =0x02FFFC00
	lsl r3, r3, #2
	ldr r0, [r1, r3]
	mvn r4, r4
	and r0, r4
	str r0, [r1, r3]
_0207CA36:
	add r0, r2, #0
	blx OS_RestoreInterrupts
	pop {r3, r4, r5, pc}
	nop
_0207CA40: .word 0x0214C5E8
_0207CA44: .word 0x02FFFC00
	thumb_func_end sub_0207C9FC

	thumb_func_start sub_0207CA48
sub_0207CA48: ; 0x0207CA48
	push {r3, r4}
	mov r2, #1
	lsl r2, r0
	ldr r4, _0207CA68 ; =0x02FFFC00
	lsl r0, r1, #2
	add r1, r4, r0
	mov r0, #0xe2
	lsl r0, r0, #2
	ldr r0, [r1, r0]
	mov r3, #1
	tst r0, r2
	bne _0207CA62
	mov r3, #0
_0207CA62:
	add r0, r3, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
_0207CA68: .word 0x02FFFC00
	thumb_func_end sub_0207CA48

	thumb_func_start sub_0207CA6C
sub_0207CA6C: ; 0x0207CA6C
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	ldr r4, [sp]
	mov r3, #0x1f
	bic r4, r3
	mov r3, #0x1f
	and r0, r3
	add r3, r4, #0
	orr r3, r0
	mov r0, #0x20
	bic r3, r0
	lsl r0, r2, #0x1f
	lsr r0, r0, #0x1a
	add r2, r3, #0
	orr r2, r0
	mov r0, #0x3f
	and r2, r0
	ldr r5, _0207CAD0 ; =0x04000184
	add r4, r2, #0
	lsl r1, r1, #6
	orr r4, r1
	ldrh r2, [r5]
	lsr r1, r5, #0xc
	tst r1, r2
	beq _0207CAAE
	ldrh r2, [r5]
	mov r1, #3
	lsl r1, r1, #0xe
	orr r1, r2
	add sp, #4
	strh r1, [r5]
	sub r0, #0x40
	pop {r3, r4, r5, r6, pc}
_0207CAAE:
	blx OS_DisableInterrupts
	ldrh r1, [r5]
	mov r6, #2
	tst r1, r6
	beq _0207CAC4
	blx OS_RestoreInterrupts
	add sp, #4
	sub r0, r6, #4
	pop {r3, r4, r5, r6, pc}
_0207CAC4:
	str r4, [r5, #4]
	blx OS_RestoreInterrupts
	mov r0, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
_0207CAD0: .word 0x04000184
	thumb_func_end sub_0207CA6C

	thumb_func_start sub_0207CAD4
sub_0207CAD4: ; 0x0207CAD4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	ldr r4, _0207CB80 ; =0x04000184
	mov r6, #3
	lsr r0, r4, #0xc
	str r0, [sp, #8]
	lsr r0, r4, #0x12
	mvn r6, r6
	str r0, [sp]
	add r0, r6, #1
	ldr r5, [sp, #0xc]
	str r0, [sp, #4]
	lsr r7, r4, #0xc
_0207CAEE:
	ldrh r0, [r4]
	tst r0, r7
	beq _0207CB02
	ldrh r1, [r4]
	mov r0, #3
	lsl r0, r0, #0xe
	orr r0, r1
	strh r0, [r4]
	add r1, r6, #1
	b _0207CB22
_0207CB02:
	blx OS_DisableInterrupts
	ldrh r2, [r4]
	ldr r1, [sp]
	tst r1, r2
	beq _0207CB16
	blx OS_RestoreInterrupts
	add r1, r6, #0
	b _0207CB22
_0207CB16:
	mov r1, #0x41
	lsl r1, r1, #0x14
	ldr r5, [r1]
	blx OS_RestoreInterrupts
	mov r1, #0
_0207CB22:
	cmp r1, r6
	beq _0207CB7A
	ldr r0, [sp, #4]
	cmp r1, r0
	beq _0207CAEE
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x1b
	beq _0207CAEE
	ldr r1, _0207CB84 ; =0x0214C5E8
	lsl r2, r0, #2
	ldr r3, [r1, r2]
	cmp r3, #0
	beq _0207CB46
	lsl r2, r5, #0x1a
	lsr r1, r5, #6
	lsr r2, r2, #0x1f
	blx r3
	b _0207CAEE
_0207CB46:
	lsl r0, r5, #0x1a
	lsr r0, r0, #0x1f
	bne _0207CAEE
	mov r0, #0x20
	orr r5, r0
	ldrh r1, [r4]
	ldr r0, [sp, #8]
	tst r0, r1
	beq _0207CB64
	ldrh r1, [r4]
	mov r0, #3
	lsl r0, r0, #0xe
	orr r0, r1
	strh r0, [r4]
	b _0207CAEE
_0207CB64:
	blx OS_DisableInterrupts
	ldrh r2, [r4]
	mov r1, #2
	tst r1, r2
	beq _0207CB72
	b _0207CB74
_0207CB72:
	str r5, [r4, #4]
_0207CB74:
	blx OS_RestoreInterrupts
	b _0207CAEE
_0207CB7A:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0207CB80: .word 0x04000184
_0207CB84: .word 0x0214C5E8
	thumb_func_end sub_0207CAD4

	thumb_func_start sub_0207CB88
sub_0207CB88: ; 0x0207CB88
	push {r3, r4, r5, lr}
	ldr r0, _0207CBC0 ; =0x0214C668
	ldrh r1, [r0]
	cmp r1, #0
	bne _0207CBBE
	mov r1, #1
	strh r1, [r0]
	mov r1, #0
	str r1, [r0, #4]
	str r1, [r0, #8]
	str r1, [r0, #0x20]
	str r1, [r0, #0xc]
	str r1, [r0, #0x10]
	bl sub_0207C94C
	mov r5, #5
	mov r4, #1
_0207CBAA:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0207CA48
	cmp r0, #0
	beq _0207CBAA
	ldr r1, _0207CBC4 ; =0x0207CD21
	add r0, r5, #0
	bl sub_0207C9FC
_0207CBBE:
	pop {r3, r4, r5, pc}
	.align 2, 0
_0207CBC0: .word 0x0214C668
_0207CBC4: .word 0x0207CD21
	thumb_func_end sub_0207CB88

	thumb_func_start sub_0207CBC8
sub_0207CBC8: ; 0x0207CBC8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r1, #0
	add r7, r2, #0
	blx OS_DisableInterrupts
	ldr r4, _0207CC0C ; =0x0214C668
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0207CBE4
	blx OS_RestoreInterrupts
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0207CBE4:
	mov r1, #1
	str r1, [r4, #4]
	blx OS_RestoreInterrupts
	mov r0, #0
	str r0, [r4, #0x18]
	str r0, [r4, #0x1c]
	str r5, [r4, #0xc]
	str r6, [r4, #8]
	str r7, [r4, #0x14]
	bl sub_0207D070
	cmp r0, #0
	beq _0207CC04
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0207CC04:
	mov r0, #0
	str r0, [r4, #4]
	mov r0, #3
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0207CC0C: .word 0x0214C668
	thumb_func_end sub_0207CBC8

	thumb_func_start sub_0207CC10
sub_0207CC10: ; 0x0207CC10
	push {r3, lr}
	ldr r1, _0207CC2C ; =0x0207D041
	mov r2, #0
	bl sub_0207CBC8
	ldr r1, _0207CC30 ; =0x0214C668
	cmp r0, #0
	str r0, [r1, #0x24]
	bne _0207CC26
	blx sub_0207D04C
_0207CC26:
	ldr r0, _0207CC30 ; =0x0214C668
	ldr r0, [r0, #0x24]
	pop {r3, pc}
	.align 2, 0
_0207CC2C: .word 0x0207D041
_0207CC30: .word 0x0214C668
	thumb_func_end sub_0207CC10

	thumb_func_start sub_0207CC34
sub_0207CC34: ; 0x0207CC34
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r1, #0
	add r7, r2, #0
	blx OS_DisableInterrupts
	ldr r4, _0207CC7C ; =0x0214C668
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0207CC50
	blx OS_RestoreInterrupts
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0207CC50:
	mov r1, #1
	str r1, [r4, #4]
	blx OS_RestoreInterrupts
	mov r0, #1
	str r0, [r4, #0x18]
	mov r0, #0
	str r0, [r4, #0x1c]
	str r5, [r4, #0xc]
	str r6, [r4, #8]
	str r7, [r4, #0x14]
	bl sub_0207D07C
	cmp r0, #0
	beq _0207CC72
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0207CC72:
	mov r0, #0
	str r0, [r4, #4]
	mov r0, #3
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0207CC7C: .word 0x0214C668
	thumb_func_end sub_0207CC34

	thumb_func_start sub_0207CC80
sub_0207CC80: ; 0x0207CC80
	push {r3, lr}
	ldr r1, _0207CC9C ; =0x0207D041
	mov r2, #0
	bl sub_0207CC34
	ldr r1, _0207CCA0 ; =0x0214C668
	cmp r0, #0
	str r0, [r1, #0x24]
	bne _0207CC96
	blx sub_0207D04C
_0207CC96:
	ldr r0, _0207CCA0 ; =0x0214C668
	ldr r0, [r0, #0x24]
	pop {r3, pc}
	.align 2, 0
_0207CC9C: .word 0x0207D041
_0207CCA0: .word 0x0214C668
	thumb_func_end sub_0207CC80

	thumb_func_start sub_0207CCA4
sub_0207CCA4: ; 0x0207CCA4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r1, #0
	add r7, r2, #0
	str r3, [sp]
	blx OS_DisableInterrupts
	ldr r4, _0207CCF0 ; =0x0214C668
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0207CCC2
	blx OS_RestoreInterrupts
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0207CCC2:
	mov r1, #1
	str r1, [r4, #4]
	blx OS_RestoreInterrupts
	mov r0, #2
	str r0, [r4, #0x18]
	mov r0, #0
	str r0, [r4, #0x1c]
	str r5, [r4, #0xc]
	str r6, [r4, #0x10]
	ldr r0, [sp]
	str r7, [r4, #8]
	str r0, [r4, #0x14]
	bl sub_0207D064
	cmp r0, #0
	beq _0207CCE8
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0207CCE8:
	mov r0, #0
	str r0, [r4, #4]
	mov r0, #3
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0207CCF0: .word 0x0214C668
	thumb_func_end sub_0207CCA4

	thumb_func_start sub_0207CCF4
sub_0207CCF4: ; 0x0207CCF4
	push {r3, lr}
	ldr r2, _0207CD10 ; =0x0207D041
	mov r3, #0
	bl sub_0207CCA4
	ldr r1, _0207CD14 ; =0x0214C668
	cmp r0, #0
	str r0, [r1, #0x24]
	bne _0207CD0A
	blx sub_0207D04C
_0207CD0A:
	ldr r0, _0207CD14 ; =0x0214C668
	ldr r0, [r0, #0x24]
	pop {r3, pc}
	.align 2, 0
_0207CD10: .word 0x0207D041
_0207CD14: .word 0x0214C668
	thumb_func_end sub_0207CCF4
_0207CD18:
	.byte 0x00, 0x48, 0x70, 0x47, 0x6C, 0xC6, 0x14, 0x02
	.byte 0xF8, 0xB5, 0xAF, 0x4C, 0x00, 0x2A, 0x12, 0xD0, 0xE0, 0x69, 0x00, 0x28, 0x01, 0xD0, 0x00, 0x20
	.byte 0xE0, 0x61, 0x60, 0x68, 0x00, 0x28, 0x01, 0xD0, 0x00, 0x20, 0x60, 0x60, 0xA2, 0x68, 0x00, 0x2A
	.byte 0x12, 0xD0, 0x00, 0x20, 0xA0, 0x60, 0x61, 0x69, 0x06, 0x20, 0x90, 0x47, 0xF8, 0xBD, 0x7F, 0x22
	.byte 0x12, 0x02, 0x08, 0x06, 0x11, 0x40, 0x09, 0x0A, 0x09, 0x06, 0x09, 0x0E, 0x00, 0x0E, 0x30, 0x29
	.byte 0x05, 0xD1, 0x20, 0x6A, 0x00, 0x28, 0x00, 0xD1, 0x38, 0xE1, 0x80, 0x47, 0xF8, 0xBD, 0x00, 0x28
	.byte 0x00, 0xD0, 0x0D, 0xE1, 0xA0, 0x69, 0x00, 0x25, 0x0F, 0x28, 0x00, 0xD9, 0xFC, 0xE0, 0x00, 0x18
	.byte 0x78, 0x44, 0xC0, 0x88, 0x00, 0x04, 0x00, 0x14, 0x87, 0x44, 0x1E, 0x00, 0x50, 0x00, 0x7A, 0x00
	.byte 0x30, 0x02, 0x30, 0x02, 0x30, 0x02, 0xC8, 0x00, 0xE0, 0x00, 0xF0, 0x00, 0x44, 0x01, 0x9E, 0x01
	.byte 0x30, 0x02, 0x30, 0x02, 0x30, 0x02, 0x30, 0x02, 0x30, 0x02, 0x8E, 0x4F, 0xE6, 0x68, 0x38, 0x68
	.byte 0x00, 0x06, 0x00, 0x0E, 0x00, 0xF0, 0x20, 0xF9, 0x30, 0x60, 0x38, 0x68, 0xC0, 0x04, 0xC0, 0x0E
	.byte 0x00, 0xF0, 0x1A, 0xF9, 0x70, 0x60, 0x38, 0x68, 0x80, 0x02, 0x80, 0x0E, 0x00, 0xF0, 0x14, 0xF9
	.byte 0xB0, 0x60, 0x30, 0x1C, 0x00, 0xF0, 0x64, 0xFA, 0xF0, 0x60, 0xEF, 0xE0, 0x82, 0x4F, 0xE6, 0x68
	.byte 0x38, 0x68, 0x80, 0x06, 0x80, 0x0E, 0x00, 0xF0, 0x07, 0xF9, 0x30, 0x60, 0x38, 0x68, 0x40, 0x04
	.byte 0x40, 0x0E, 0x00, 0xF0, 0x01, 0xF9, 0x70, 0x60, 0x38, 0x68, 0x40, 0x02, 0x40, 0x0E, 0x00, 0xF0
	.byte 0xFB, 0xF8, 0xB0, 0x60, 0xDA, 0xE0, 0x77, 0x4F, 0xE6, 0x68, 0x38, 0x68, 0x00, 0x06, 0x00, 0x0E
	.byte 0x00, 0xF0, 0xF2, 0xF8, 0x30, 0x60, 0x38, 0x68, 0xC0, 0x04, 0xC0, 0x0E, 0x00, 0xF0, 0xEC, 0xF8
	.byte 0x70, 0x60, 0x38, 0x68, 0x80, 0x02, 0x80, 0x0E, 0x00, 0xF0, 0xE6, 0xF8, 0xB0, 0x60, 0x30, 0x1C
	.byte 0x00, 0xF0, 0x36, 0xFA, 0xF0, 0x60, 0x78, 0x68, 0x26, 0x69, 0x80, 0x06, 0x80, 0x0E, 0x00, 0xF0
	.byte 0xDB, 0xF8, 0x30, 0x60, 0x78, 0x68, 0x40, 0x04, 0x40, 0x0E, 0x00, 0xF0, 0xD5, 0xF8, 0x70, 0x60
	.byte 0x78, 0x68, 0xD2, 0xE7, 0x65, 0x49, 0xE0, 0x68, 0x09, 0x88, 0x09, 0x07, 0x09, 0x0F, 0x04, 0x29
	.byte 0x02, 0xD1, 0x01, 0x21, 0x01, 0x60, 0xA9, 0xE0, 0x05, 0x60, 0xA7, 0xE0, 0x5F, 0x49, 0xE0, 0x68
	.byte 0x09, 0x88, 0x49, 0x06, 0xC9, 0x0F, 0x00, 0xD0, 0xF3, 0xE7, 0xF5, 0xE7, 0x5A, 0x4F, 0xE6, 0x68
	.byte 0x38, 0x68, 0x40, 0x07, 0x40, 0x0F, 0x30, 0x60, 0x38, 0x68, 0x80, 0x04, 0x80, 0x0E, 0x00, 0xF0
	.byte 0xB3, 0xF8, 0x70, 0x60, 0x38, 0x68, 0x40, 0x02, 0x40, 0x0E, 0x00, 0xF0, 0xAD, 0xF8, 0xB0, 0x60
	.byte 0xF5, 0x60, 0x38, 0x68, 0x00, 0x06, 0xC0, 0x0F, 0x02, 0xD0, 0xF0, 0x68, 0x40, 0x1C, 0xF0, 0x60
	.byte 0x4D, 0x48, 0x00, 0x68, 0x00, 0x04, 0xC0, 0x0F, 0x02, 0xD0, 0xF0, 0x68, 0x80, 0x1C, 0xF0, 0x60
	.byte 0x49, 0x48, 0x00, 0x68, 0x00, 0x02, 0xC0, 0x0F, 0x78, 0xD0, 0xF0, 0x68, 0x00, 0x1D, 0x83, 0xE7
	.byte 0xE1, 0x69, 0x00, 0x29, 0x27, 0xD1, 0xE0, 0x68, 0x00, 0x68, 0x01, 0x28, 0x43, 0x48, 0x13, 0xD1
	.byte 0x02, 0x88, 0x12, 0x07, 0x12, 0x0F, 0x04, 0x2A, 0x68, 0xD0, 0x49, 0x1C, 0xE1, 0x61, 0x02, 0x88
	.byte 0x0F, 0x21, 0x8A, 0x43, 0x04, 0x21, 0x11, 0x43, 0x01, 0x80, 0x00, 0xF0, 0xC5, 0xF8, 0x00, 0x28
	.byte 0x5C, 0xD1, 0xE5, 0x61, 0x03, 0x25, 0x59, 0xE0, 0x02, 0x88, 0x12, 0x07, 0x12, 0x0F, 0x55, 0xD0
	.byte 0x49, 0x1C, 0xE1, 0x61, 0x02, 0x88, 0x0F, 0x21, 0x8A, 0x43, 0x02, 0x80, 0x00, 0xF0, 0xB4, 0xF8
	.byte 0x00, 0x28, 0x4B, 0xD1, 0xED, 0xE7, 0xE5, 0x61, 0x48, 0xE0, 0xE1, 0x69, 0x00, 0x29, 0x22, 0xD1
	.byte 0xE0, 0x68, 0x00, 0x68, 0x01, 0x28, 0x2D, 0x48, 0x0E, 0xD1, 0x02, 0x88, 0x52, 0x06, 0xD2, 0x0F
	.byte 0x3C, 0xD1, 0x49, 0x1C, 0xE1, 0x61, 0x02, 0x88, 0x40, 0x21, 0x11, 0x43, 0x01, 0x80, 0x00, 0xF0
	.byte 0x9B, 0xF8, 0x00, 0x28, 0x32, 0xD1, 0xD4, 0xE7, 0x02, 0x88, 0x52, 0x06, 0xD2, 0x0F, 0x2D, 0xD0
	.byte 0x49, 0x1C, 0xE1, 0x61, 0x02, 0x88, 0x40, 0x21, 0x8A, 0x43, 0x02, 0x80, 0x00, 0xF0, 0x8C, 0xF8
	.byte 0x00, 0x28, 0x23, 0xD1, 0xC5, 0xE7, 0xD6, 0xE7, 0xFD, 0xF7, 0x88, 0xFE, 0x01, 0x28, 0x03, 0xD1
	.byte 0x00, 0xF0, 0x36, 0xE8, 0x05, 0x1C, 0x19, 0xE0, 0x00, 0x20, 0x04, 0x25, 0xE0, 0x61, 0x15, 0xE0
	.byte 0x00, 0x21, 0xE1, 0x61, 0x04, 0x28, 0x10, 0xD8, 0x00, 0x18, 0x78, 0x44, 0xC0, 0x88, 0x00, 0x04
	.byte 0x00, 0x14, 0x87, 0x44, 0x14, 0x00, 0x08, 0x00, 0x0C, 0x00, 0x10, 0x00, 0x14, 0x00, 0x04, 0x25
	.byte 0x04, 0xE0, 0x05, 0x25, 0x02, 0xE0, 0x01, 0x25, 0x00, 0xE0, 0x06, 0x25, 0xE0, 0x69, 0x00, 0x28
	.byte 0x0C, 0xD1, 0x60, 0x68, 0x00, 0x28, 0x01, 0xD0, 0x00, 0x20, 0x60, 0x60, 0xA2, 0x68, 0x00, 0x2A
	.byte 0x04, 0xD0, 0x00, 0x20, 0xA0, 0x60, 0x61, 0x69, 0x28, 0x1C, 0x90, 0x47, 0xF8, 0xBD, 0xC0, 0x46
	.byte 0x68, 0xC6, 0x14, 0x02, 0xE8, 0xFD, 0xFF, 0x02, 0xEC, 0xFD, 0xFF, 0x02, 0xEA, 0xFD, 0xFF, 0x02
	.byte 0x04, 0xF0, 0x1F, 0xE5, 0x00, 0x00, 0x70, 0x02, 0xF0, 0xB4, 0x00, 0x21, 0x00, 0x25, 0x0F, 0x22
	.byte 0xAB, 0x00, 0x04, 0x1C, 0xDC, 0x40, 0x23, 0x1C, 0x13, 0x40, 0x0A, 0x2B, 0x02, 0xD3, 0x00, 0x20
	.byte 0xF0, 0xBC, 0x70, 0x47, 0x6D, 0x1C, 0x08, 0x2D, 0xF2, 0xDB, 0x00, 0x23, 0x01, 0x22, 0x0F, 0x24
	.byte 0x0A, 0x25, 0x9E, 0x00, 0x07, 0x1C, 0xF7, 0x40, 0x3E, 0x1C, 0x26, 0x40, 0x56, 0x43, 0x5B, 0x1C
	.byte 0x89, 0x19, 0x6A, 0x43, 0x08, 0x2B, 0xF4, 0xDB, 0x08, 0x1C, 0xF0, 0xBC, 0x70, 0x47, 0x00, 0x00
	.byte 0x01, 0x49, 0x48, 0x62, 0x70, 0x47, 0xC0, 0x46, 0x68, 0xC6, 0x14, 0x02

